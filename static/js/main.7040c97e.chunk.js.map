{"version":3,"sources":["views/Contract/List.js","../node_modules/web3-eth-accounts/src sync","views/Login.js","views/Account.js","views/Transaction.js","views/Contract/Tool.js","views/Contract/Create.js","views/Contract.js","App.js","index.js"],"names":["TextArea","Input","handleGetContractMethod","web3","account","JSONInterface","contractAddress","contractCall","setContractValue","contract","eth","Contract","JSON","parse","eval","valueOf","then","data","err","console","log","handleCustomMethod","customCall","handleGetContractMethods","setContractMethods","methods","List","React","useState","setJSONInterface","setContractAddress","contractMethods","contractValue","customMethod","setCustomMethod","Fragment","layout","Item","extra","value","onChange","e","target","autoSize","rows","type","onClick","Object","keys","filter","key","indexOf","map","method","style","textAlign","webpackEmptyContext","req","Error","code","resolve","module","exports","id","Title","Typography","Paragraph","Login","span","href","Account","networkId","netWork","margin","background","padding","minHeight","protocolVersion","gasPrice","rel","blockNumber","address","balance","isMining","tableColumns","title","dataIndex","Transaction","fromAddress","toAddress","setToAddress","transactionWei","setTransactionWei","limit","price","gas","setGas","blockHash","setBlockHash","blocks","setBlocks","handleSendTransaction","sendTransaction","from","to","on","hash","window","localStorage","getItem","setItem","stringify","concat","receipt","confirmationNumber","error","useEffect","location","pathname","blocksPromises","a","getTransaction","block","getTransactionReceipt","Promise","all","totalBlocks","orderBlocks","blockPack","Math","random","substring","status","theme","twoToneColor","path","render","prefix","color","placeholder","utils","fromWei","htmlType","_","columns","dataSource","debounceTimer","Group","solc","wrapper","Module","sampleCode","handleSolidityToByteCode","setCompiling","setByteCode","setAbi","setErrors","setContractData","clearTimeout","setTimeout","input","language","sources","content","settings","outputSelection","output","compile","errors","contractName","contracts","ABI","abi","contractData","evm","bytecode","object","Tool","setCode","byteCode","compiling","message","formattedMessage","sourcelocation","end","file","start","options","mode","lineNumbers","getValue","loading","size","Create","deploy","send","transactionHash","newContractInstance","deployContract","Header","Layout","Content","Footer","App","isValid","setAccount","setNetWork","setLocation","ethereum","Web3","enable","accounts","length","getBalance","round","getGasPrice","net","getId","getProtocolVersion","getBlockNumber","position","zIndex","width","className","selectedKeys","lineHeight","active","marginTop","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7040c97e.chunk.js","sourcesContent":["import React from 'react'\nimport { Form, Input, Button } from 'antd'\nconst { TextArea } = Input;\n\nfunction handleGetContractMethod(web3, account, JSONInterface, contractAddress, contractCall, setContractValue) {\n  try {\n    const contract = new web3.eth.Contract(JSON.parse(JSONInterface), contractAddress);\n    eval(`contract.methods['${contractCall.valueOf()}']().call({\n      from: account.address\n    })`)\n      .then(data => setContractValue(data))\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nfunction handleCustomMethod(web3, account, JSONInterface, contractAddress, customCall) {\n  try {\n    const contract = new web3.eth.Contract(JSON.parse(JSONInterface), contractAddress);\n    eval(`contract.methods['${customCall.valueOf()}']('0x12355').send({\n      from: account.address\n    })`)\n      .then(data => console.log(data))\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nfunction handleGetContractMethods(web3, JSONInterface, contractAddress, setContractMethods) {\n  try {\n    const contract = new web3.eth.Contract(JSON.parse(JSONInterface), contractAddress);\n    console.log(contract)\n    setContractMethods(contract.methods)\n  } catch (err) { console.log(err) }\n}\n\nfunction List({ web3, account }) {\n  const [JSONInterface, setJSONInterface] = React.useState('')\n  const [contractAddress, setContractAddress] = React.useState('')\n  const [contractMethods, setContractMethods] = React.useState([])\n  const [contractValue, setContractValue] = React.useState('')\n  const [customMethod, setCustomMethod] = React.useState('')\n  return (\n    <React.Fragment>\n      <h2>查看智能合約</h2>\n      <Form layout='vertical'>\n        <Form.Item\n          extra='合約介面（JSONInterface）'\n        >\n          <TextArea value={JSONInterface} onChange={(e) => setJSONInterface(e.target.value)} autoSize rows={4} />\n        </Form.Item>\n        <Form.Item\n          extra=\"輸入要查看的合約地址\"\n        >\n          <Input value={contractAddress} onChange={(e) => setContractAddress(e.target.value)} />\n        </Form.Item>\n        <Form.Item>\n          <Button type='primary' onClick={() => handleGetContractMethods(web3, JSONInterface, contractAddress, setContractMethods)}>查詢</Button>\n        </Form.Item>\n        <h3>合約可呼叫方法</h3>\n        <Form.Item>\n          {\n            Object.keys(contractMethods).filter(key => key.indexOf('()') >= 0).map(method => (\n              <Button onClick={() => handleGetContractMethod(web3, account, JSONInterface, contractAddress, method, setContractValue)} key={method}>執行 {method}</Button>\n            ))\n          }\n        </Form.Item>\n        <h3>自訂呼叫方法</h3>\n        <Form.Item>\n          <Input value={customMethod} onChange={(e) => setCustomMethod(e.target.value)} />\n          <Button onClick={() => handleCustomMethod(web3, account, JSONInterface, contractAddress, customMethod, setContractValue)} key={customMethod}>執行自訂方法</Button>\n        </Form.Item>\n        <h3 style={{ textAlign: 'center' }}>運行結果</h3>\n        <TextArea value={contractValue} autoSize />\n      </Form>\n    </React.Fragment>\n  )\n}\n\nexport default List","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 471;","import React from 'react'\nimport { Spin, Row, Col, Typography } from 'antd';\nconst { Title, Paragraph } = Typography;\n\nfunction Login() {\n  return (\n    <Row>\n      <Col span={8}></Col>\n      <Col span={8}>\n        <Typography>\n          <Title>Podcast Contract Block</Title>\n          <Paragraph>\n            Podcast Contract Block 是一個開放學習專案，環繞「以太坊」而成，此專案不會紀錄任何個人資訊，歡迎一起學習使用。\n          </Paragraph>\n          <Paragraph>\n            此專案需要和 MetaTask 插件合作，如果您尚未安裝，請<a href='https://metamask.io/'>至此安裝插件</a>。\n          </Paragraph>\n        </Typography>\n        授權請求等待中 <Spin />\n        <hr />\n        <h2>為什麼沒有收到任何結果？</h2>\n        <p>因為 MetaMask 政策關係，現在改為由授權驗證登入，如果您無法使用或尚未看到授權視窗，請檢查您的 MetaMask 是否啟動。</p>\n      </Col>\n      <Col span={8}></Col>\n    </Row >\n  )\n}\n\nexport default Login","import React from 'react'\nimport { Breadcrumb } from 'antd'\n\nfunction getNetworkName(networkId) {\n  if (networkId === 1) return \"以太坊主網路\";\n  else if (networkId === 3) return \"Ropsten 測試網路\";\n  else if (networkId === 42) return \"Kovan 測試網路\";\n  else if (networkId === 4) return \"Rinkeby 測試網路\";\n  else return \"\";\n}\n\nfunction Account({ account, netWork }) {\n  return (\n    <React.Fragment>\n      <Breadcrumb style={{ margin: '16px 0' }}>\n        <Breadcrumb.Item>帳戶資訊</Breadcrumb.Item>\n      </Breadcrumb>\n      <div style={{ background: '#fff', padding: 24, minHeight: 380 }}>\n        <div>版本：{netWork.protocolVersion}</div>\n        <div>網路：{getNetworkName(netWork.id)}</div>\n        <div>目前 GasPrice 費用：{account.gasPrice} ether</div>\n        <div>目前區塊：<a target='_blank' rel=\"noopener noreferrer\" href={`https://ropsten.etherscan.io/block/${netWork.blockNumber}`}>{netWork.blockNumber}</a></div>\n        <div>錢包地址：<a target='_blank' rel=\"noopener noreferrer\" href={`https://ropsten.etherscan.io/address/${account.address}`}>{account.address}</a></div>\n        <div>乙太幣：{account.balance} 顆</div>\n        <div>挖礦狀態：{account.isMining ? '啟動' : '停止'}</div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default Account","import React from 'react'\nimport { Breadcrumb, Form, Icon, Input, Button, Table, Spin } from 'antd'\nimport { Route, Link, Switch } from 'react-router-dom'\n\nconst tableColumns = [\n  {\n    title: '',\n    dataIndex: 'status',\n    key: 'status'\n  },\n  {\n    title: '交易雜湊值',\n    dataIndex: 'blockHash',\n    key: 'blockHash'\n  },\n  {\n    title: '區塊編號',\n    dataIndex: 'blockNumber',\n    key: 'blockNumber'\n  },\n  {\n    title: '付出以太幣地址',\n    dataIndex: 'from',\n    key: 'from'\n  },\n  {\n    title: '收入以太幣地址',\n    dataIndex: 'to',\n    key: 'to'\n  },\n  {\n    title: '以太幣額',\n    dataIndex: 'value',\n    key: 'value'\n  },\n  {\n    title: '內容',\n    dataIndex: 'input',\n    key: 'input'\n  }\n]\nfunction Transaction({ web3, account }) {\n  const [fromAddress] = React.useState(account.address)\n  const [toAddress, setToAddress] = React.useState('')\n  const [transactionWei, setTransactionWei] = React.useState('1000000000000000000')\n  const [gas, setGas] = React.useState({\n    limit: '21000',\n    price: account.gasPrice\n  })\n  const [blockHash, setBlockHash] = React.useState('')\n  const [blocks, setBlocks] = React.useState([])\n  const handleSendTransaction = () => {\n    web3.eth.sendTransaction({\n      from: fromAddress,\n      to: toAddress,\n      value: transactionWei,\n      gas: gas.limit,\n      gasPrice: gas.price\n    })\n      .on('transactionHash', function (hash) {\n        if (window.localStorage.getItem('PCB-blocks')) {\n          window.localStorage.setItem('PCB-blocks', JSON.stringify(JSON.parse(window.localStorage.getItem('PCB-blocks')).concat(hash)))\n        } else {\n          window.localStorage.setItem('PCB-blocks', JSON.stringify([hash]))\n        }\n      })\n      .on('receipt', function (receipt) {\n        console.log(receipt)\n      })\n      .on('confirmation', function (confirmationNumber, receipt) { })\n      .on('error', console.error); // If a out of gas error, the second parameter is the receipt.\n  }\n  React.useEffect(() => {\n    if (window.localStorage.getItem('PCB-blocks') && window.location.pathname === '/transaction/blocks') {\n      const blocksHash = JSON.parse(window.localStorage.getItem('PCB-blocks'))\n      const blocksPromises = blocksHash.map(async hash => {\n        const block = await web3.eth.getTransaction(hash)\n        const receipt = await web3.eth.getTransactionReceipt(hash)\n        return { block, receipt }\n      })\n      Promise.all(blocksPromises).then(totalBlocks => {\n        const orderBlocks = totalBlocks.map(blockPack => {\n          return {\n            ...blockPack.block,\n            key: blockPack.block.blockNumber || Math.random,\n            blockHash: blockPack.block.blockHash ? <a target='_blank' rel=\"noopener noreferrer\" href={`https://ropsten.etherscan.io/tx/${blockPack.block.hash}`}>{blockPack.block.hash.substring(0, 15) + '...'}</a> : '0x',\n            from: blockPack.block.from.substring(0, 15) + '...',\n            to: blockPack.block.to.substring(0, 15) + '...',\n            value: blockPack.block.value / 1000000000000000000,\n            status: blockPack.receipt ? blockPack.receipt.status ? <Icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" /> : <Icon type=\"close-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" /> : <Spin />\n          }\n        })\n        setBlocks(orderBlocks)\n      })\n    }\n  }, [window.location.pathname])\n  return (\n    <React.Fragment>\n      <Breadcrumb style={{ margin: '16px 0' }}>\n        <Breadcrumb.Item>交易管理</Breadcrumb.Item>\n      </Breadcrumb>\n      <div>\n        ｜<Link to='/transaction/operator'>交易功能</Link>｜<Link to='/transaction/blocks'>查看交易區塊</Link>｜\n      </div>\n      <br />\n      <div style={{ background: '#fff', padding: 24, minHeight: 380 }}>\n        <Switch>\n          <Route\n            path='/transaction/operator'\n            render={() => (\n              <React.Fragment>\n                <h2>發送以太幣</h2>\n                <Form layout='vertical'>\n                  <Form.Item\n                    extra=\"預設為您原有審核帳戶\"\n                  >\n                    <Input\n                      prefix={<Icon type=\"wallet\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                      type=\"text\"\n                      value={fromAddress}\n                      placeholder={fromAddress}\n                    />\n                  </Form.Item>\n                  <Form.Item>\n                    <Input\n                      prefix={<Icon type=\"wallet\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                      type=\"text\"\n                      value={toAddress}\n                      placeholder=\"發送至\"\n                      onChange={(e) => setToAddress(e.target.value)}\n                    />\n                  </Form.Item>\n                  <Form.Item\n                    extra={`ETH 最小單位為 wei (1:1000000000000000000)，目前換算為數量 ${transactionWei / 1000000000000000000} ETH`}\n                  >\n                    <Input\n                      prefix={<Icon type=\"wallet\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                      type=\"text\"\n                      value={transactionWei}\n                      placeholder=\"交易數量(wei)\"\n                      onChange={(e) => setTransactionWei(e.target.value)}\n                    />\n                  </Form.Item>\n                  <Form.Item\n                    extra={`燃料限制，依照最低交易標準 ${web3.utils.fromWei(gas.limit, 'ether') * 1000000000} ETH`}\n                  >\n                    <Input\n                      prefix={<Icon type=\"wallet\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                      type=\"text\"\n                      value={gas.limit}\n                      placeholder=\"燃料限制\"\n                      onChange={(e) => setGas({\n                        ...gas,\n                        limit: e.target.value\n                      })}\n                    />\n                  </Form.Item>\n                  <Form.Item\n                    extra={`燃料費用，目前平均費用 ${web3.utils.fromWei(gas.price, 'ether')} ETH，單位費用越高，越容易被礦工執行驗證`}\n                  >\n                    <Input\n                      prefix={<Icon type=\"wallet\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                      type=\"text\"\n                      value={gas.price}\n                      placeholder=\"燃料費用\"\n                      onChange={(e) => setGas({\n                        ...gas,\n                        price: e.target.value\n                      })}\n                    />\n                  </Form.Item>\n                  <Form.Item>\n                    <div>最高手續費：{gas.limit * gas.price / 1000000000000000000} ETH (燃料限制 * 燃料費用)</div>\n                    <div>最高總花費：{gas.limit * gas.price / 1000000000000000000 + transactionWei / 1000000000000000000} ETH (發送 + 手續費)</div>\n                  </Form.Item>\n                  <Form.Item>\n                    <Button onClick={handleSendTransaction} type=\"primary\" htmlType=\"submit\">\n                      確認發送\n                  </Button>\n                  </Form.Item>\n                </Form>\n              </React.Fragment>\n            )}\n          />\n          <Route\n            path='/transaction/blocks'\n            render={() => (\n              <React.Fragment>\n                <h2>查看交易區塊</h2>\n                <Form layout='horizontal'>\n                  <Form.Item>\n                    <Input\n                      prefix={<Icon type=\"block\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                      type=\"text\"\n                      value={blockHash}\n                      placeholder={'自行添加交易區塊'}\n                      onChange={e => setBlockHash(e.target.value)}\n                    />\n                    <Button onClick={async _ => {\n                      const block = await web3.eth.getTransaction(blockHash)\n                      const receipt = await web3.eth.getTransactionReceipt(blockHash)\n                      if (block) {\n                        setBlocks(blocks.concat({\n                          key: block.blockNumber,\n                          ...block,\n                          blockHash: blockHash.substring(0, 15) + '...',\n                          from: block.from.substring(0, 15) + '...',\n                          to: block.to.substring(0, 15) + '...',\n                          value: block.value / 1000000000000000000,\n                          status: receipt.status ? <Icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" /> : <Icon type=\"close-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" />\n                        }))\n                      }\n                    }}>添加交易區塊</Button>\n                  </Form.Item>\n                </Form>\n                <Table columns={tableColumns} dataSource={blocks} />\n              </React.Fragment>\n            )}\n          />\n        </Switch>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default Transaction","import React from 'react'\nimport { Input, Button, Row, Col } from 'antd'\nimport * as wrapper from 'solc/wrapper';\nimport { UnControlled as CodeMirror } from 'react-codemirror2'\nimport 'codemirror-solidity'\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css'\nimport 'codemirror-solidity/solidity.css';\n\nconst { TextArea, Group } = Input;\nconst solc = wrapper(window.Module);\nconst sampleCode = `pragma solidity ^0.5.11;\n\ncontract MyContract {\n    function myFunction() public pure returns (string memory) {\n        return 'Hello World!';\n    }\n}`\n\nlet debounceTimer\nfunction handleSolidityToByteCode(code, setCompiling, setByteCode, setAbi, setErrors, setJSONInterface, setContractData) {\n  if (debounceTimer) {\n    clearTimeout(debounceTimer)\n  }\n  debounceTimer = setTimeout(() => {\n    var input = {\n      language: 'Solidity',\n      sources: {\n        'contract.sol': {\n          content: code\n        }\n      },\n      settings: {\n        outputSelection: {\n          '*': {\n            '*': ['*']\n          }\n        }\n      }\n    };\n    const output = JSON.parse(solc.compile(JSON.stringify(input)));\n    if (output.errors) {\n      const error = output.errors[0]\n      setErrors({\n        ...error\n      })\n      return\n    }\n    for (var contractName in output.contracts['contract.sol']) {\n      const ABI = JSON.stringify(output.contracts['contract.sol'][contractName].abi, null, 4)\n      const contractData = output.contracts['contract.sol'][contractName].evm.bytecode.object\n      setAbi(ABI)\n      setJSONInterface(ABI)\n      setByteCode(contractData)\n      setContractData(contractData)\n    }\n    setCompiling(false)\n  }, 500)\n}\n\nfunction Tool({ setJSONInterface, setContractData }) {\n  const [code, setCode] = React.useState(sampleCode)\n  const [byteCode, setByteCode] = React.useState('')\n  const [compiling, setCompiling] = React.useState(false)\n  const [abi, setAbi] = React.useState('')\n  const [errors, setErrors] = React.useState({\n    message: '',\n    formattedMessage: '',\n    sourcelocation: {\n      end: 0,\n      file: '',\n      start: 0\n    },\n    type: ''\n  })\n  if (errors.message !== '')\n    console.log(errors)\n  return (\n    <React.Fragment>\n      <h3 style={{ textAlign: 'center' }}>SolidityCode</h3>\n      <CodeMirror\n        value={sampleCode}\n        options={{\n          mode: 'text/x-solidity',\n          theme: 'material',\n          lineNumbers: true\n        }}\n        onChange={(e) => setCode(e.getValue())}\n      />\n      <div>\n        <Button type=\"primary\" loading={compiling} onClick={() => {\n          setCompiling(true)\n          handleSolidityToByteCode(code, setCompiling, setByteCode, setAbi, setErrors, setJSONInterface, setContractData)\n        }}>編譯</Button>\n      </div>\n      <Group size=\"large\">\n        <Row>\n          <Col span={12}>\n            <h3 style={{ textAlign: 'center' }}>ByteCode</h3>\n            <TextArea value={byteCode} autoSize rows={4} />\n          </Col>\n          <Col span={12}>\n            <h3 style={{ textAlign: 'center' }}>JSONInterface</h3>\n            <TextArea value={abi} autoSize rows={4} />\n          </Col>\n        </Row>\n      </Group>\n    </React.Fragment>\n  )\n}\n\nexport default Tool","import React from 'react'\nimport { Input, Button } from 'antd'\nconst { TextArea } = Input;\n\nfunction deployContract(web3, address, JSONInterface, contractData) {\n  const contract = new web3.eth.Contract([JSON.parse(JSONInterface)]);\n  contract.deploy({\n    data: contractData\n  }).send({\n    from: address,\n    gas: 1500000,\n  }, function (error, transactionHash) { console.log(error) })\n    .on('error', function (error) { })\n    .on('transactionHash', function (transactionHash) { })\n    .on('receipt', function (receipt) {\n      console.log(receipt.contractAddress) // contains the new contract address\n    })\n    .on('confirmation', function (confirmationNumber, receipt) { })\n    .then(function (newContractInstance) {\n      console.log(newContractInstance.options.address) // instance with the new contract address\n    });\n}\nfunction Create({ web3, account, JSONInterface, contractData }) {\n  return (\n    <React.Fragment>\n      <h2>部署智能合約</h2>\n      <div>部署者：{account.address}</div>\n      <div>支付燃料費用：0.00047 ETH</div>\n      <div>合約介面（JSONInterface）\n      <TextArea value={JSONInterface} autoSize rows={4} />\n      </div>\n      <div>\n        合約執行內容（data）\n      <TextArea value={contractData} autoSize rows={4} />\n      </div>\n      <Button type='danger' onClick={() => deployContract(web3, account.address, JSONInterface, contractData)}>部署合約</Button>\n    </React.Fragment>\n  )\n}\n\nexport default Create","import React from 'react'\nimport { Breadcrumb } from 'antd'\nimport { Link, Route } from 'react-router-dom'\n\nimport Tool from './Contract/Tool'\nimport Create from './Contract/Create'\nimport List from './Contract/List'\n\nfunction Contract({ web3, account }) {\n  const [JSONInterface, setJSONInterface] = React.useState('')\n  const [contractData, setContractData] = React.useState('')\n  return (\n    <React.Fragment>\n      <Breadcrumb style={{ margin: '16px 0' }}>\n        <Breadcrumb.Item>智能合約</Breadcrumb.Item>\n      </Breadcrumb>\n      <div>\n        ｜<Link to='/contract/list'>查看智能合約</Link>｜\n        <Link to='/contract/create'>建立智能合約</Link>｜\n        <Link to='/contract/tool'>智能合約工具</Link>｜\n      </div>\n      <br />\n      <div style={{ background: '#fff', padding: 24, minHeight: 380 }}>\n        <Route path='/contract/list' render={() => <List web3={web3} account={account} />} />\n        <Route path='/contract/create' render={() => <Create web3={web3} account={account} JSONInterface={JSONInterface} contractData={contractData} />} />\n        <Route path='/contract/tool' render={() => <Tool web3={web3} account={account} setJSONInterface={setJSONInterface} setContractData={setContractData} />} />\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default Contract","import React from 'react';\nimport { Route, Link, Switch } from 'react-router-dom'\nimport Web3 from 'web3'\nimport { Layout, Menu } from 'antd';\n\nimport Login from './views/Login'\nimport Account from './views/Account'\nimport Transaction from './views/Transaction'\nimport Contract from './views/Contract'\n\nconst { Header, Content, Footer } = Layout;\nlet web3;\n\nfunction App() {\n  const [account, setAccount] = React.useState({\n    address: '',\n    balance: 0,\n    isValid: false,\n    isMining: false,\n    gasPrice: '0'\n  })\n  const [netWork, setNetWork] = React.useState({\n    id: '',\n    protocolVersion: 0,\n    blockNumber: '0x0'\n  })\n  const [location, setLocation] = React.useState({\n    pathname: window.location.pathname\n  })\n  React.useEffect(() => {\n    if (window.ethereum) {\n      web3 = new Web3(window.ethereum);\n      try {\n        window.ethereum.enable().then(async accounts => {\n          if (accounts.length > 0) {\n            setAccount({\n              balance: Math.round(web3.utils.fromWei(await web3.eth.getBalance(accounts[0]), 'ether') * 1000) / 1000,\n              isValid: true,\n              isMining: await web3.eth.isMining(),\n              gasPrice: await web3.eth.getGasPrice(),\n              address: accounts[0]\n            })\n            setNetWork({\n              id: await web3.eth.net.getId(),\n              protocolVersion: await web3.eth.getProtocolVersion(),\n              blockNumber: await web3.eth.getBlockNumber()\n            })\n          }\n        })\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  }, [])\n  if (!account.isValid) return <Login account={account} setAccount={setAccount} />\n  return (\n    <Layout>\n      <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n        <Link onClick={() => setLocation('/')} to='/'><div className=\"logo\">Podcast Contract Block</div></Link>\n        <Menu\n          theme=\"dark\"\n          mode=\"horizontal\"\n          selectedKeys={[location]}\n          style={{ lineHeight: '64px' }}\n        >\n          <Menu.Item onClick={() => setLocation('/account')} key=\"/account\" active={false}><Link to='/account'>帳戶資訊</Link></Menu.Item>\n          <Menu.Item onClick={() => setLocation('/transaction')} key=\"/transaction\"><Link to='/transaction'>交易管理</Link></Menu.Item>\n          <Menu.Item onClick={() => setLocation('/contract')} key=\"/contract\"><Link to='/contract'>智能合約</Link></Menu.Item>\n        </Menu>\n      </Header>\n      <Content style={{ padding: '0 50px', marginTop: 64 }}>\n        <Switch>\n          <Route path='/account' exact render={() => <Account account={account} netWork={netWork} />} />\n          <Route path='/transaction' render={() => <Transaction web3={web3} account={account} />} />\n          <Route path='/contract' render={() => <Contract web3={web3} account={account} />} />\n        </Switch>\n      </Content>\n      <Footer style={{ textAlign: 'center' }}>Made by 懷恩</Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n    BrowserRouter as Router\n} from 'react-router-dom'\nimport 'antd/dist/antd.min.css';\nimport './global.css'\nimport App from './App';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n    , document.getElementById('root'));\n"],"sourceRoot":""}